plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'net.bytebuddy:byte-buddy-agent:1.14.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

test {
    useJUnitPlatform()
    workingDir project.buildDir
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    jvmArgs "-XX:+UnlockExperimentalVMOptions", "-XX:+EnableJVMCI", "-XX:+UnlockDiagnosticVMOptions", "-XX:PrintAssemblyOptions=intel", "-XX:CompileCommand=print,one.nalim.test.*::*"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '--add-modules' << 'jdk.internal.vm.ci'
    options.compilerArgs << '--add-exports' << 'jdk.internal.vm.ci/jdk.vm.ci.code=ALL-UNNAMED'
    options.compilerArgs << '--add-exports' << 'jdk.internal.vm.ci/jdk.vm.ci.code.site=ALL-UNNAMED'
    options.compilerArgs << '--add-exports' << 'jdk.internal.vm.ci/jdk.vm.ci.hotspot=ALL-UNNAMED'
    options.compilerArgs << '--add-exports' << 'jdk.internal.vm.ci/jdk.vm.ci.meta=ALL-UNNAMED'
    options.compilerArgs << '--add-exports' << 'jdk.internal.vm.ci/jdk.vm.ci.runtime=ALL-UNNAMED'
}

jar {
    manifest {
        attributes(
                'Premain-Class': 'one.nalim.Agent',
        )
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
